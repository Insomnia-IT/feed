openapi: 3.0.1
info:
  title: insomnia-synchronization
  description: Синхронизация Админки и Интегратора
  version: 1.0.0
servers:
- url: /
paths:
  /sync:
    get:
      summary: Прямая синхрронизация из интегртора в админку
      parameters:
      - name: from_date
        in: query
        schema:
          type: string
          format: date-time
          example: "2019-05-17T11:00:00.000Z"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncResponse'
  /back-sync:
    post:
      summary: Обратная синхрронизация из админки в интегратор
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackSyncBody'
      responses:
        "200":
          description: OK
components:
  schemas:
    SyncResponse:
      type: object
      required:
        - badges
        - arrivals
        - engagements
        - persons
        - directions
      properties:
        badges:
          type: array
          items:
            $ref: '#/components/schemas/Badge'
        arrivals:
          type: array
          items:
            $ref: '#/components/schemas/Arrival'
        engagements:
          type: array
          items:
            $ref: '#/components/schemas/Engagement'
        persons:
          type: array
          items:
            $ref: '#/components/schemas/Person'
        directions:
          type: array
          items:
            $ref: '#/components/schemas/Direction'
    BackSyncBody:
      type: object
      required:
        - badges
        - arrivals
      properties:
        badges:
          type: array
          items:
            type: object
            required:
              - id
              - badge
              - date
              - data
            properties:
              actor_badge:
                type: string
                format: uuid
              date:
                type: string
                format: date-time
              data:
                $ref: '#/components/schemas/Badge'
        arrivals:
          type: array
          items:
            type: object
            required:
              - id
              - badge
              - date
              - data
            properties:
              actor_badge:
                type: string
                format: uuid
              date:
                type: string
                format: date-time
              data:
                $ref: '#/components/schemas/Arrival'
    Badge:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
        deleted:
          type: boolean
          example: false
        name:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        gender:
          type: string
          enum:
            - MALE
            - FEMALE
            - OTHER
        phone:
          type: string
        infant:
          type: boolean
        vegan: 
          type: boolean
        feed:
          type: string
          enum:
            - FREE
            - PAID
            - NO
        number:
          type: string
        batch:
          type: string
        role:
          type: string
          enum:
            - ORGANIZER
            - CAMP_LEAD
            - VICE
            - TEAM_LEAD
            - VOLUNTEER
            - CAMP_GUY
            - PARTICIPANT
            - FELLOW
            - CONTRACTOR
            - MEDIC
            - ANIMATOR
            - LECTOR
            - ARTIST
            - VIP
            - PRESS
            - ART_FELLOW
        position:
          type: string
        photo:
          type: string
          example: https://upload.wikimedia.org/wikipedia/commons/f/f5/Example_image.jpg
        person:
          type: string
          format: uuid
        comment:
          type: string
    Arrival:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
        deleted:
          type: boolean
          example: false
        badge:
          type: string
          format: uuid
        status:
          type: string
          enum:
            - PLANNED
            - CANCELED
            - PENDING
            - CONFIRMED
            - SKIPPED
            - ARRIVED
            - STARTED
            - LEFT
            - COMPLETE
            - JOINED
        arrival_date:
          type: string
          format: date
          example: "2024-05-17"
        arrival_transport:
          type: string
          enum:
            - UNDEFINED
            - SELF
            - BUS
            - CAR
            - TRANSFER
            - MOVE
        departure_date:
          type: string
          format: date
          example: "2024-05-17"
        departure_transport:
          type: string
          enum:
            - UNDEFINED
            - SELF
            - BUS
            - CAR
            - TRANSFER
            - MOVE
    Engagement:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
        deleted:
          type: boolean
          example: false
        year:
          type: integer
          example: 2023
        person:
          type: string
          format: uuid
        role:
          type: string
          enum:
            - ORGANIZER
            - CAMP_LEAD
            - VICE
            - TEAM_LEAD
            - VOLUNTEER
            - CAMP_GUY
            - PARTICIPANT
            - FELLOW
            - CONTRACTOR
            - MASTER
        position:
          type: string
        status:
          type: string
          enum:
            - PLANNED
            - CANCELED
            - PENDING
            - CONFIRMED
            - SKIPPED
            - ARRIVED
            - STARTED
            - LEFT
            - COMPLETE
            - JOINED
        direction:
          type: string
          format: uuid
    Person:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
        deleted:
          type: boolean
          example: false
        name:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        nickname:
          type: string
        other_names:
          type: string
          example: 'Бонапарт, Тузик, Штиршиц'
        gender:
          type: string
          enum:
            - MALE
            - FEMALE
            - OTHER
        birth_date:
          type: string
          format: date
          example: '1990-11-05'
        phone:
          type: string
        telegram:
          type: string
        email:
          type: string
        city:
          type: string
        vegan:
          type: boolean
    Direction:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
        deleted:
          type: boolean
          example: false
        name:
          type: string
        first_year:
          type: integer
          example: 2020
        last_year:
          type: integer
          example: 2024
        type:
          type: string
          enum:
            - CITY_SERVICE
            - FIELD_SERVICE
            - UNIVERSAL_SERVICE
            - FEDERAL_LOCATION
            - GRANT_LOCATION
            - COMMERCIAL_LOCATION
            - LATERAL_LOCATION
            - RESPONSIBILITY_AREA
    